{"version":3,"sources":["components/Note.js","services/note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","res","data","newObj","post","id","put","Notification","props","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","item","e","console","log","onSubmit","preventDefault","newNoteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","map","key","find","changedNote","catch","err","setTimeout","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"kNAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,YACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCM3B,EAVA,WACb,OAAOK,IAAMC,IAHC,cAGYC,MAAK,SAACC,GAAD,OAASA,EAAIC,SAS/B,EAPA,SAACC,GACd,OAAOL,IAAMM,KANC,aAMaD,IAMd,EAJA,SAACE,EAAIF,GAClB,OAAOL,IAAMQ,IAAN,UATO,aASP,YAAwBD,GAAMF,ICHxBI,EALM,SAACC,GAAW,IACvBC,EAAYD,EAAZC,QACR,OAAgB,OAAZA,EAAyB,KACtB,yBAAKd,UAAU,SAASc,ICYlBC,EAfA,SAACF,GAMd,OACE,yBAAKG,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGC2ESC,EAjFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,oBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAWhBC,qBALa,WACXC,IAAqB1B,MAAK,SAACiB,GACzBC,EAASD,QAGG,IAChB,IAsCMU,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKnC,aAEhC,OACE,6BACE,qCACA,kBAAC,EAAD,CAAce,QAASc,IACvB,6BACE,4BAAQ1B,QA/BS,SAACiC,GACtBR,GAAYD,GACZU,QAAQC,IAAIL,KA6BR,OACON,EAAU,UAAY,cAG/B,0BAAMY,SAnDM,SAACH,GACfA,EAAEI,iBACF,IAAMC,EAAgB,CACpBvC,QAASuB,EACTiB,MAAM,IAAIC,MAAOC,cACjB5C,UAAW6C,KAAKC,SAAW,IAE7Bd,EAAmBS,GAAenC,MAAK,SAACC,GACtCiB,EAASD,EAAMwB,OAAOxC,EAAIC,OAC1BkB,EAAW,SA2CT,2BAAOsB,MAAOvB,EAASwB,SAxCJ,SAACb,GACxBC,QAAQC,IAAIF,EAAEc,OAAOF,OACrBtB,EAAWU,EAAEc,OAAOF,UAuChB,4BAAQG,KAAK,UAAb,WAEF,4BACGlB,EAAYmB,KAAI,SAACvD,GAAD,OACf,kBAAC,EAAD,CACEA,KAAMA,EACNwD,IAAKxD,EAAKc,GACVb,iBAAkB,kBAxCD,SAACa,GAC1B0B,QAAQC,IAAI,iBAAmB3B,EAAK,wBACpC,IAAMd,EAAO0B,EAAM+B,MAAK,SAACnB,GAAD,OAAUA,EAAKxB,KAAOA,KACxC4C,EAAW,2BAAQ1D,GAAR,IAAcG,WAAYH,EAAKG,YAChDgC,EACUrB,EAAI4C,GACXjD,MAAK,SAACC,GACLiB,EAASD,EAAM6B,KAAI,SAACvD,GAAD,OAAWA,EAAKc,KAAOA,EAAKd,EAAOU,EAAIC,YAE3DgD,OAAM,SAACC,GACN3B,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGfwD,YAAW,WACT5B,EAAgB,QACf,QAyByB6B,CAAmB9D,EAAKc,WAItD,kBAAC,EAAD,Q,MC7ENiD,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,W","file":"static/js/main.c3b20c5a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\nconst create = (newObj) => {\n  return axios.post(baseUrl, newObj);\n};\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from \"react\";\n\nconst Notification = (props) => {\n  const { message } = props;\n  if (message === null) return null;\n  return <div className=\"error\">{message}</div>;\n};\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = (props) => {\n  const footStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"input a new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n\n  const hook = () => {\n    noteService.getAll().then((notes) => {\n      setNotes(notes);\n    });\n  };\n  useEffect(hook, []);\n  const addNote = (e) => {\n    e.preventDefault();\n    const newNoteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    noteService.create(newNoteObject).then((res) => {\n      setNotes(notes.concat(res.data));\n      setNewNote(\"\");\n    });\n  };\n  const handleNoteChange = (e) => {\n    console.log(e.target.value);\n    setNewNote(e.target.value);\n  };\n  const handleNoteShow = (e) => {\n    setShowAll(!showAll);\n    console.log(notesToShow);\n  };\n  const toggleImportanceOf = (id) => {\n    console.log(\"importance of \" + id + \" needs to be toggled\");\n    const note = notes.find((item) => item.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteService\n      .update(id, changedNote)\n      .then((res) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : res.data)));\n      })\n      .catch((err) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((item) => item.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={handleNoteShow}>\n          show{showAll ? \"showALL\" : \"important\"}\n        </button>\n      </div>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}></input>\n        <button type=\"submit\">submit</button>\n      </form>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            note={note}\n            key={note.id}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          ></Note>\n        ))}\n      </ul>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport './index.css'\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n"],"sourceRoot":""}